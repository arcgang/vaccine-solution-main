{"version":3,"sources":["webpack:///./src/pages/solution/repo-map.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,gCACA,sBACE,kBAAIC,WAAW,MAAK,iBAAGA,WAAW,KAC9B,KAAQ,4DADQ,2CAApB,wIAIF,0CACA,sBACE,kBAAIA,WAAW,MAAK,iBAAGA,WAAW,KAC9B,KAAQ,+DADQ,qEAApB,6IAGA,kBAAIA,WAAW,MAAK,iBAAGA,WAAW,KAC9B,KAAQ,qEADQ,+DAApB,+OAGA,kBAAIA,WAAW,MAAK,iBAAGA,WAAW,KAC9B,KAAQ,yEADQ,sCAApB,qHAIF,+CACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,iBAAGA,WAAW,IAC7B,KAAQ,sEADO,sEAAnB,gQAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,iBAAGA,WAAW,IAC7B,KAAQ,sEADO,qCAAnB,iMAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,iBAAGA,WAAW,IAC7B,KAAQ,iEADO,mBAAnB,gJASRJ,EAAWK,gBAAiB","file":"component---src-pages-solution-repo-map-mdx-adbd318cdafa400ec814.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/vaccine-solution-main/vaccine-solution-main/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Gitops`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-cloud-architecture/vaccine-gitops\"\n        }}>{`Gitops repository to manage deployments`}</a>{`: Each component has its own kustomize yaml file, and different environment configurations are also defined. See repository readme.`}</li>\n    </ul>\n    <h2>{`Order processing`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-cloud-architecture/vaccine-order-mgr\"\n        }}>{`Order management microservice with user interface to enter orders`}</a>{`. This project illustrates the Transactional OutBox pattern combined with Debezium Change data capture from Postgresql database to Kafka.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-cloud-architecture/vaccine-order-optimizer\"\n        }}>{`Order shipment optimizer with Decision Optimization (CPLEX)`}</a>{`. This is a python flask application exposing REST API but also consuming events from different topic to maintain internal view of the data needed for the optimization execution. CPLEX runs on Cloud Pak for Data or on IBM Cloud service`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-cloud-architecture/vaccine-transport-simulator\"\n        }}>{`Transportation table and simulator`}</a>{` a simple simulator to present the transportation route and cost to be used by the order optimization component.`}</li>\n    </ul>\n    <h2>{`Cold chain monitoring`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm-cloud-architecture/vaccine-monitoring-agent\"\n          }}>{`Refrigerator monitoring to assess cold chain and anomaly detection`}</a>{`: this is a quarkus app, with microprofile and reactive messaging. It use Kafka Streams with Ktable, interactive query to compute the mumber of temperature violation per container. It optionally calls the anomaly detection model deployed on Watson ML.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm-cloud-architecture/vaccine-reefer-simulator\"\n          }}>{`Simulate Refrigerator telemetries`}</a>{`. The simulator component is a Python-based application for generating anomalous data events for refrigerated containers. It is controlled by a REST API for triggering the cold chain demo.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm-cloud-architecture/vaccine-freezer-mgr\"\n          }}>{`Freezer manager`}</a>{` to process alerts and broadcast them to server side events. Support also other operations and Resources for managing the Freezer entity.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}